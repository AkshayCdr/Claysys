@model WatchWorld.Models.Registration
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/HomeShared/HomeLayout.cshtml";
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit</title>
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.5.3/umd/popper.min.js"></script>
</head>
<body>
    <h2>Edit</h2>
    @Html.Raw(TempData["UpdateErrorMsg"])
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
<div class="container">
    <h4>Registration</h4>
    <hr />
    @Html.HiddenFor(model => model.Id)
    <div class="form-group row">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "col-md-2 col-form-label" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group row">
            @Html.LabelFor(model => model.Dob, htmlAttributes: new { @class = "col-md-2 col-form-label" })
            <div class="col-md-10">
                <input type="date" id="datepicker" name="Dob" value="@Model.Dob.ToString("yyyy-MM-dd")" class="form-control" />
                @Html.ValidationMessageFor(model => model.Dob, "", new { @class = "text-danger" })
            </div>
        </div>
    <div class="form-group row">
        @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "col-md-2 col-form-label" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group row">
        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "col-md-2 col-form-label" })
        <div class="col-md-10">
            <label class="form-check-inline">
                @Html.RadioButtonFor(model => model.Gender, "M", new { @class = "form-check-input" }) Male
            </label>
            <label class="form-check-inline">
                @Html.RadioButtonFor(model => model.Gender, "F", new { @class = "form-check-input" }) Female
            </label>
            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group row">
        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "col-md-2 col-form-label" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group row">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "col-md-2 col-form-label" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>
   <div class="form-group row">
        @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "col-md-2 col-form-label" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.State, new SelectList(
            new List<SelectListItem>
            {
                new SelectListItem { Text = "Kerala", Value = "Kerala" },
                new SelectListItem { Text = "Karnataka", Value = "Karnataka" },
                new SelectListItem { Text = "Tamil Nadu", Value = "Tamil Nadu" },
                new SelectListItem { Text = "Andhra", Value = "Andhra" }
            }, "Value", "Text"),
            new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group row">
        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "col-md-2 col-form-label" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.City, new SelectList(
            new List<SelectListItem>
            {
                new SelectListItem { Text = "Kochi", Value = "Kochi" },
                new SelectListItem { Text = "Bangalore", Value = "Bangalore" },
                new SelectListItem { Text = "Chennai", Value = "Chennai" },
                new SelectListItem { Text = "Vizag", Value = "Vizag" }
            }, "Value", "Text"),
            new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group row">
        @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "col-md-2 col-form-label" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group row">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "col-md-2 col-form-label" })
        <div class="col-md-10">
            @Html.PasswordFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group row">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-primary" />
        </div>
    </div>
</div>
    }

    <div>
        @Html.ActionLink("Back to List", "List")
    </div>
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.5.3/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>
</html>























































